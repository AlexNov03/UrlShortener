// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/urlusecase.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/AlexNov03/UrlShortener/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockUrlRepository is a mock of UrlRepository interface.
type MockUrlRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUrlRepositoryMockRecorder
}

// MockUrlRepositoryMockRecorder is the mock recorder for MockUrlRepository.
type MockUrlRepositoryMockRecorder struct {
	mock *MockUrlRepository
}

// NewMockUrlRepository creates a new mock instance.
func NewMockUrlRepository(ctrl *gomock.Controller) *MockUrlRepository {
	mock := &MockUrlRepository{ctrl: ctrl}
	mock.recorder = &MockUrlRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlRepository) EXPECT() *MockUrlRepositoryMockRecorder {
	return m.recorder
}

// AddOriginalUrl mocks base method.
func (m *MockUrlRepository) AddOriginalUrl(ctx context.Context, data *models.UrlData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddOriginalUrl", ctx, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddOriginalUrl indicates an expected call of AddOriginalUrl.
func (mr *MockUrlRepositoryMockRecorder) AddOriginalUrl(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddOriginalUrl", reflect.TypeOf((*MockUrlRepository)(nil).AddOriginalUrl), ctx, data)
}

// GetOriginalUrl mocks base method.
func (m *MockUrlRepository) GetOriginalUrl(ctx context.Context, shortUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginalUrl", ctx, shortUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOriginalUrl indicates an expected call of GetOriginalUrl.
func (mr *MockUrlRepositoryMockRecorder) GetOriginalUrl(ctx, shortUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginalUrl", reflect.TypeOf((*MockUrlRepository)(nil).GetOriginalUrl), ctx, shortUrl)
}
